---
- name: Set CSR path for instance (dsctl)
  ansible.builtin.set_fact:
    dirsrv_csr_csr_path: "/etc/dirsrv/slapd-{{ dirsrv_csr_instance }}/{{ dirsrv_csr_server_cert_filename }}"
  tags: [tls, csr]

- name: Stat CSR path before generation (dsctl)
  ansible.builtin.stat:
    path: "{{ dirsrv_csr_csr_path }}"
  register: _csr_stat_pre
  tags: [tls, csr]

- name: Probe dsctl CSR support for instance
  ansible.builtin.command:
    argv: ["{{ dirsrv_dsctl_bin }}", "{{ dirsrv_csr_instance }}", "tls", "generate-server-cert-csr", "--help"]
  register: _dsctl_csr_help
  changed_when: false
  failed_when: false
  tags: [tls, csr]

- name: Generate CSR with dsctl (if supported)
  ansible.builtin.command:
    argv: "{{ [ dirsrv_dsctl_bin, dirsrv_csr_instance, 'tls', 'generate-server-cert-csr', '-s', dirsrv_csr_subject ] + (dirsrv_csr_dns_sans | default([])) }}"
  register: _dsctl_gen
  changed_when: true
  failed_when: _dsctl_gen.rc != 0
  tags: [tls, csr]
  when:
    - (_dsctl_csr_help.rc | default(1)) == 0
    - not ansible_check_mode
    - (not _csr_stat_pre.stat.exists) or (dirsrv_csr.force | default(false)) | bool

- name: Snapshot | CSR generate (dsctl) results (test-only)
  vars:
    res: "{{ _dsctl_gen }}"
    __snap_dir: "{{ [dirsrv_artifact_root_effective | default(dirsrv_csr_artifacts_root_effective), inventory_hostname] | path_join }}"
    __raw_cmd: "{{ (res.cmd | default('')) | string }}"
    __san_cmd: "{{ __raw_cmd }}"
    __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
    __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
    __payload: |
      {{ {
          'host': inventory_hostname,
          'step': 'csr-dsctl-' ~ (dirsrv_csr_instance | regex_replace('[^A-Za-z0-9_.-]','_')),
          'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
          'argv_redacted': __san_cmd,
          'rc': res.rc | default(-1),
          'stdout_excerpt': (res.stdout | default(''))[:2048],
          'stderr_excerpt': (res.stderr | default(''))[:2048],
          'duration_ms': __dur_ms
        } | to_nice_json }}
  when: dirsrv_debug | bool and (_dsctl_csr_help.rc | default(1)) == 0 and ((not _csr_stat_pre.stat.exists) or (dirsrv_csr.force | default(false)) | bool) and not ansible_check_mode
  block:
    - name: Ensure local artifacts dir exists (controller)
      ansible.builtin.file:
        path: "{{ __snap_dir }}"
        state: directory
        mode: "0750"
      connection: local
      delegate_to: localhost
      become: false
    - name: Write command snapshot (csr dsctl)
      ansible.builtin.copy:
        content: "{{ __payload }}"
        dest: "{{ [__snap_dir, 'cmd-csr-dsctl-' ~ (dirsrv_csr_instance | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '.json'] | path_join }}"
        mode: "0640"
      connection: local
      delegate_to: localhost
      become: false

- name: Normalize CSR permissions (dsctl)
  ansible.builtin.file:
    path: "{{ dirsrv_csr_csr_path }}"
    owner: dirsrv
    group: dirsrv
    mode: "0640"
  when: (_dsctl_csr_help.rc | default(1)) == 0 and not ansible_check_mode
  tags: [security, tls, csr]

- name: Stat CSR to compute sha256 (dsctl)
  ansible.builtin.stat:
    path: "{{ dirsrv_csr_csr_path }}"
    checksum_algorithm: sha256
  register: _csr_stat_post
  tags: [tls, csr]

- name: Append result for instance (dsctl)
  ansible.builtin.set_fact:
    dirsrv_csr_results: "{{ (dirsrv_csr_results | default([])) + [ {
      'cn': inventory_hostname,
      'sans': { 'dns': dirsrv_csr_dns_sans | default([]), 'ip': dirsrv_csr_ip_sans | default([]) },
      'instance': dirsrv_csr_instance,
      'tool': 'dsctl',
      'tool_path': dirsrv_dsctl_bin,
      'sha256': _csr_stat_post.stat.checksum | default(''),
      'generated_at': ansible_date_time.iso8601 | default(''),
      'csr_path': dirsrv_csr_csr_path
    } ] }}"
  when: (_dsctl_csr_help.rc | default(1)) == 0
  tags: [tls, csr, artifacts]

- name: Fallback to certutil when dsctl CSR not supported
  ansible.builtin.include_tasks:
    file: generate_with_certutil.yml
  when: (_dsctl_csr_help.rc | default(1)) != 0
  tags: [tls, csr]

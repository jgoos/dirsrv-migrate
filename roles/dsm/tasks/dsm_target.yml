---
- name: Copy config archive to target node
  ansible.builtin.copy:
    dest: "{{ dsm_tempdir }}/dirsrv_slapd-{{ dsm_instance }}.tar.bz2"
    group: dirsrv
    mode: '0640'
    owner: dirsrv
    src: "{{ dsm_artifact_root }}/{{ dsm_source_host }}/dirsrv_slapd-{{ dsm_instance }}.tar.bz2"


- name: Copy LDIF dump(s) to target node
  ansible.builtin.copy:
    dest: "{{ dsm_base_varldif }}/migration-{{ item }}.ldif"
    group: dirsrv
    mode: '0640'
    owner: dirsrv
    setype: dirsrv_var_lib_t
    src: "{{ dsm_artifact_root }}/{{ dsm_source_host }}/migration-{{ item }}.ldif"
  loop: "{{ dsm_backends.keys() | list }}"

- name: Build list of target LDIF file paths
  ansible.builtin.set_fact:
    dsm_ldif_files: "{{ dsm_backends.keys() | list | map('regex_replace', '^(.*)$', dsm_base_varldif ~ '/migration-\\1.ldif') | list }}"

- name: Clean exported data LDIFs with configured patterns
  ansible.builtin.replace:
    backup: true
    path: "{{ item.0 }}"
    regexp: "{{ item.1.regexp }}"
    replace: "{{ item.1.replace | default('') }}"
  loop: "{{ (dsm_ldif_files | default([])) | product(dsm_cleanup_patterns_data | default([])) | list }}"

- name: Extract schema into place
  ansible.builtin.unarchive:
    src: "{{ [dsm_tempdir, 'dirsrv_slapd-' ~ dsm_instance ~ '.tar.bz2'] | path_join }}"
    dest: /
    remote_src: true
    include:
      - "etc/dirsrv/slapd-{{ dsm_instance }}/schema/*"
    # creates: "/etc/dirsrv/slapd-{{ dsm_instance }}/schema"

- name: Restart instance
  ansible.builtin.command:
    argv:
      - /usr/sbin/dsctl
      - "{{ dsm_instance }}"
      - restart
  changed_when: false

- name: Import data
  ansible.builtin.command:
    argv:
      - /usr/sbin/dsconf
      - -D
      - "cn=Directory Manager"
      - -w
      - "{{ dsm_password }}"
      - ldap://localhost:389
      - backend
      - import
      - "{{ item }}"
      - "{{ dsm_base_varldif }}/migration-{{ item }}.ldif"
  loop: "{{ dsm_backends.keys() | list }}"
  changed_when: false

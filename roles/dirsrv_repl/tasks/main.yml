---
- name: Preflight | Include common preflight (tools, ldapi, DNS/TCP gating)
  ansible.builtin.include_role:
    name: dirsrv_common
    tasks_from: preflight

- name: Preflight | Ensure dsconf/dsctl available
  block:
    - name: Preflight | Stat dsconf candidates
      ansible.builtin.stat:
        path: "{{ item }}"
      register: dirsrv_repl_dsconf_stats
      loop:
        - /usr/bin/dsconf
        - /usr/sbin/dsconf
        - /sbin/dsconf
        - dsconf
      changed_when: false

    - name: Preflight | Assert dsconf present
      ansible.builtin.assert:
        that:
          - (dirsrv_repl_dsconf_stats.results | selectattr('stat.exists','equalto', true) | list | length) > 0
        fail_msg: "dsconf not found in PATH or standard locations"

    - name: Preflight | Stat dsctl candidates
      ansible.builtin.stat:
        path: "{{ item }}"
      register: dirsrv_repl_dsctl_stats
      loop:
        - /usr/bin/dsctl
        - /usr/sbin/dsctl
        - /sbin/dsctl
        - dsctl
      changed_when: false

    - name: Preflight | Assert dsctl present
      ansible.builtin.assert:
        that:
          - (dirsrv_repl_dsctl_stats.results | selectattr('stat.exists','equalto', true) | list | length) > 0
        fail_msg: "dsctl not found in PATH or standard locations"

- name: Preflight | Service facts for time sync check
  ansible.builtin.service_facts:

- name: Preflight | Warn if time sync service inactive (chronyd/ntpd/timesyncd)
  ansible.builtin.debug:
    msg: "Time sync service not active (chronyd/ntpd/systemd-timesyncd). Replication CSNs require correct time."

- name: Preflight | Include comprehensive health checks
  ansible.builtin.include_tasks: health_checks.yml
  when: not ansible_check_mode

- name: Preflight | Include monitoring setup
  ansible.builtin.include_tasks: monitoring.yml
  when: not ansible_check_mode

- name: Preflight | Additional time sync warning
  ansible.builtin.debug:
    msg: "Time sync service not active (chronyd/ntpd/systemd-timesyncd). Replication CSNs require correct time."
    warn: true
  when: >-
    (ansible_facts.services is defined) and not (
      ('chronyd.service' in ansible_facts.services and ansible_facts.services['chronyd.service'].state == 'running') or
      ('ntpd.service' in ansible_facts.services and ansible_facts.services['ntpd.service'].state == 'running') or
      ('systemd-timesyncd.service' in ansible_facts.services and ansible_facts.services['systemd-timesyncd.service'].state == 'running')
    )

- name: Preflight | Validate local node definition exists
  ansible.builtin.assert:
    that:
      - dirsrv_repl_nodes is mapping
      - dirsrv_repl_nodes[inventory_hostname] is defined
      - dirsrv_repl_nodes[inventory_hostname].role in ['supplier','consumer','hub']
      - dirsrv_repl_nodes[inventory_hostname].instance is string
      - dirsrv_repl_nodes[inventory_hostname].host is string
      - dirsrv_repl_nodes[inventory_hostname].port is number
      - dirsrv_repl_nodes[inventory_hostname].protocol in ['LDAP','LDAPS']
    fail_msg: "Define dirsrv_repl_nodes[{{ inventory_hostname }}] with role/instance/host/port/protocol"

- name: Preflight | Set fact - local node
  ansible.builtin.set_fact:
    dirsrv_repl_this_node: "{{ dirsrv_repl_nodes[inventory_hostname] }}"

- name: Preflight | Validate unique replica IDs across suppliers/hubs (controller)
  ansible.builtin.assert:
    that:
      - >-
        not dirsrv_repl_require_unique_replica_ids | bool or
        (
          (dirsrv_repl_replica_ids[item] | default({}) | dict2items | map(attribute='value') | list | length)
          ==
          (dirsrv_repl_replica_ids[item] | default({}) | dict2items | map(attribute='value') | list | unique | length)
        )
    fail_msg: "Replica IDs must be unique per suffix across suppliers/hubs (suffix={{ item }})"
  loop: "{{ dirsrv_repl_suffixes }}"
  run_once: true
  delegate_to: localhost
  vars:
    ansible_become: false


- name: Include enable tasks
  ansible.builtin.include_tasks: enable.yml


- name: Include agreements tasks
  ansible.builtin.include_tasks: agreements.yml

- name: Include init tasks
  ansible.builtin.include_tasks: init.yml

- name: Include tuning tasks
  ansible.builtin.include_tasks: tuning.yml

- name: Wait for agreements healthy
  ansible.builtin.include_tasks: wait_green.yml

- name: Include monitor tasks
  ansible.builtin.include_tasks: monitor.yml

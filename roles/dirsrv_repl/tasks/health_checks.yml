---
# Lean health checks for replication operations
# Environment/DNS/TCP gating moved to common preflight

- name: Health Checks | Pre-flight validation
  block:
    - name: Health Checks | Validate required variables
      ansible.builtin.assert:
        that:
          - dirsrv_repl_suffixes is defined
          - dirsrv_repl_suffixes | length > 0
          - dirsrv_repl_nodes is defined
          - dirsrv_repl_nodes | length > 0
          - dirsrv_repl_auth is defined
          - dirsrv_repl_auth.bind_dn is defined
          - dirsrv_repl_auth.bind_password is defined
        fail_msg: "Required replication variables not defined or empty"

    - name: Health Checks | Validate replica IDs are unique per suffix
      ansible.builtin.assert:
        that:
          - >-
            ((item.value | default({})) | dict2items | map(attribute='value') | list | length)
            ==
            ((item.value | default({})) | dict2items | map(attribute='value') | list | unique | length)
        fail_msg: "Duplicate replica IDs found for suffix {{ item.key }}"
      with_dict: "{{ dirsrv_repl_replica_ids | default({}) }}"
      when: dirsrv_repl_require_unique_replica_ids | bool

    - name: Health Checks | Validate agreements mapping (local outbound only)
      ansible.builtin.assert:
        that:
          - dirsrv_repl_nodes[item.1.to] is defined
          - item.1.from == inventory_hostname
          - item.1.from != item.1.to
        fail_msg: "Invalid agreement mapping: ensure targets exist and no self-links"
      with_subelements:
        - "{{ dirsrv_repl_agreements | dict2items }}"
        - value
      when: item.1.from == inventory_hostname

- name: Health Checks | System readiness checks
  block:
    - name: Health Checks | Check time synchronization
      ansible.builtin.command:
        argv: [timedatectl, status]
      register: time_sync_status
      changed_when: false
      failed_when: false
      when: ansible_system is defined and ansible_system == "Linux"

    - name: Health Checks | Warn if time sync issues detected
      ansible.builtin.debug:
        msg: "Time synchronization issues detected. Replication requires accurate time."
        warn: true
      when: 
        - ansible_system is defined
        - ansible_system == "Linux"
        - '(time_sync_status.rc | int) != 0 or ("synchronized: yes" not in (time_sync_status.stdout | default("")))'

    - name: Health Checks | Check data directory status
      ansible.builtin.stat:
        path: "{{ dirsrv_data_dir | default(dirsrv_paths.data_dir) }}"
      register: data_dir_stat

    - name: Health Checks | Query free space for data directory
      ansible.builtin.command:
        argv:
          - df
          - -B1
          - --output=avail
          - "{{ dirsrv_data_dir | default('/var/lib/dirsrv') }}"
      register: data_dir_space
      changed_when: false
      failed_when: false

## System readiness checks removed; covered elsewhere or out of scope here

- name: Health Checks | LDAPI connectivity verification
  block:
    - name: Health Checks | Test LDAPI socket accessibility
      ansible.builtin.command:
        argv:
          - ldapsearch
          - -Y
          - EXTERNAL
          - -H
          - "{{ dirsrv_ldapi_uri }}"
          - -s
          - base
          - -b
          - ""
          - "1.1"
      register: ldapi_health_check
      changed_when: false
      failed_when: false
      retries: "{{ dirsrv_repl_retry_settings.operation_timeouts.ldapi_health_check | int // dirsrv_repl_retry_settings.base_delay | int }}"
      delay: "{{ dirsrv_repl_retry_settings.base_delay | int }}"
      until: ldapi_health_check.rc == 0

    - name: Health Checks | Verify LDAPI response
      ansible.builtin.assert:
        that:
          - ldapi_health_check.rc == 0
          - ldapi_health_check.stdout is defined
        fail_msg: "LDAPI socket not responding correctly"

## Remote connectivity checks removed; DNS/TCP gating handled in preflight

## Replication state validation removed; convergence handled by ds_repl_wait

## Replication state, topology, and post-op verification removed; handled by ds_repl_wait

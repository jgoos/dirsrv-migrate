---
- name: Agreements | Skip if no matrix defined
  ansible.builtin.debug:
    msg: "No replication agreements defined; skipping"
  when: (dirsrv_repl_agreements | length | int) == 0

- name: Agreements | Include comprehensive health checks
  ansible.builtin.include_tasks: health_checks.yml
  when:
    - dirsrv_repl_agreements | length | int > 0
    - not ansible_check_mode

- name: Agreements | Validate target nodes exist
  ansible.builtin.assert:
    that:
      - dirsrv_repl_nodes[item.1.to] is defined
    fail_msg: "Target host '{{ item.1.to }}' missing in dirsrv_repl_nodes"
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname

# Remote SIMPLE bind preflight moved under health_checks/preflight

# Ensure agreements via module
- name: Agreements | Ensure via module
  vars:
    suffix: "{{ item.0.key }}"
    agree: "{{ item.1 }}"
    target: "{{ dirsrv_repl_nodes[agree.to] }}"
  directories.ds.ds_repl_agreement:
    instance: "{{ dirsrv_repl_this_node.instance }}"
    suffix: "{{ suffix }}"
    consumer_host: "{{ target.host }}"
    consumer_port: "{{ target.port }}"
    name: "{{ agree.name }}"
    transport: "{{ target.protocol }}"
    bind_method: "{{ dirsrv_repl_auth.method | lower }}"
    bind_dn: "{{ dirsrv_repl_auth.bind_dn }}"
    bind_pw: "{{ dirsrv_repl_auth.bind_password }}"
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname
    - not ansible_check_mode

- name: Snapshot | Ensure local artifacts dir exists (controller)
  ansible.builtin.file:
    path: "{{ [dirsrv_artifact_root_effective, inventory_hostname] | path_join }}"
    state: directory
    mode: "0750"
  connection: local
  delegate_to: localhost
  become: false
  when: dirsrv_debug | bool

- name: Snapshot | Agreements list command results (test-only)
  vars:
    res: "{{ item }}"
    suffix: "{{ item.item.0.key | default('') }}"
    __snap_dir: "{{ [dirsrv_artifact_root_effective, inventory_hostname] | path_join }}"
    __raw_cmd: "{{ (res.cmd | default('')) | string }}"
    __san_cmd_1: "{{ __raw_cmd | regex_replace('(?i)(--bind-passwd) +[^ ]+','--bind-passwd ****') }}"
    __san_cmd: "{{ __san_cmd_1 | regex_replace('(?i)(-w) +[^ ]+','-w ****') }}"
    __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
    __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
  ansible.builtin.copy:
    content: |
      {{ {
          'host': inventory_hostname,
          'step': 'agreements-list-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')),
          'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
          'argv_redacted': __san_cmd,
          'rc': res.rc | default(-1),
          'stdout_excerpt': (res.stdout | default(''))[:2048],
          'stderr_excerpt': (res.stderr | default(''))[:2048],
          'duration_ms': __dur_ms
        } | to_nice_json }}
    dest: "{{ [__snap_dir, 'cmd-agreements-list-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '.json'] | path_join }}"
    mode: "0640"
  connection: local
  delegate_to: localhost
  become: false
  loop: []
  when: false

  # CLI agreement creation removed; using module path above

- name: Snapshot | Agreement create command results (test-only)
  vars:
    res: "{{ item }}"
    agree: "{{ item.item.1 }}"
    suffix: "{{ item.item.0.key }}"
    __snap_dir: "{{ [dirsrv_artifact_root_effective, inventory_hostname] | path_join }}"
    __raw_cmd: "{{ (res.cmd | default('')) | string }}"
    __san_cmd_1: "{{ __raw_cmd | regex_replace('(?i)(--bind-passwd) +[^ ]+','--bind-passwd ****') }}"
    __san_cmd_2: "{{ __san_cmd_1 | regex_replace('(?i)(-w) +[^ ]+','-w ****') }}"
    __san_cmd: "{{ __san_cmd_2 | regex_replace('(?i)(--passwd) +[^ ]+','--passwd ****') }}"
    __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
    __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
  ansible.builtin.copy:
    content: |
      {{ {
          'host': inventory_hostname,
          'step': 'agreement-create-' ~ (agree.name | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')),
          'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
          'argv_redacted': __san_cmd,
          'rc': res.rc | default(-1),
          'stdout_excerpt': (res.stdout | default(''))[:2048],
          'stderr_excerpt': (res.stderr | default(''))[:2048],
          'duration_ms': __dur_ms
        } | to_nice_json }}
    dest: "{{ [__snap_dir, 'cmd-agreement-create-' ~ (agree.name | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '.json'] | path_join }}"
    mode: "0640"
  connection: local
  delegate_to: localhost
  become: false
  loop: []
  when: false

- name: Agreements | Warn if schedule configured with init=true (may pause)
  ansible.builtin.debug:
    msg: "Schedule {{ dirsrv_repl_schedule }} may pause updates during initial sync for {{ item.1.name }}"
    warn: true
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname
    - dirsrv_repl_schedule | length > 0
    - dirsrv_repl_init_mode == 'online'
    - (item.1.init | default(false)) | bool

## Apply schedule via CLI until module supports it
- name: Agreements | Apply schedule
  ansible.builtin.command:
    argv:
      - dsconf
      - -D
      - "{{ dirsrv_dm_dn }}"
      - -w
      - "{{ dirsrv_password }}"
      - "{{ dirsrv_repl_conn_url }}"
      - repl-agmt
      - set
      - --suffix
      - "{{ item.0.key }}"
      - --schedule
      - "{{ dirsrv_repl_schedule }}"
      - "{{ item.1.name }}"
  register: dirsrv_repl_agmt_sched
  changed_when: >-
    dirsrv_repl_agmt_sched.rc == 0 and (
      'updated' in (dirsrv_repl_agmt_sched.stdout | lower | default('')) or
      'modified' in (dirsrv_repl_agmt_sched.stdout | lower | default(''))
    )
  failed_when: dirsrv_repl_agmt_sched.rc != 0
  no_log: "{{ not (dirsrv_debug | default(false) | bool) }}"
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname
    - dirsrv_repl_schedule | length > 0
    - not ansible_check_mode

- name: Snapshot | Agreement schedule set results (test-only)
  vars:
    res: "{{ item }}"
    suffix: "{{ item.item.0.key }}"
    agree: "{{ item.item.1.name }}"
    __snap_dir: "{{ [dirsrv_artifact_root_effective, inventory_hostname] | path_join }}"
    __raw_cmd: "{{ (res.cmd | default('')) | string }}"
    __san_cmd_1: "{{ __raw_cmd | regex_replace('(?i)(-w) +[^ ]+','-w ****') }}"
    __san_cmd: "{{ __san_cmd_1 | regex_replace('(?i)(--bind-passwd) +[^ ]+','--bind-passwd ****') }}"
    __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
    __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
  ansible.builtin.copy:
    content: |
      {{ {
          'host': inventory_hostname,
          'step': 'agreement-schedule-' ~ (agree | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')),
          'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
          'argv_redacted': __san_cmd,
          'rc': res.rc | default(-1),
          'stdout_excerpt': (res.stdout | default(''))[:2048],
          'stderr_excerpt': (res.stderr | default(''))[:2048],
          'duration_ms': __dur_ms
        } | to_nice_json }}
    dest: "{{ [__snap_dir, 'cmd-agreement-schedule-' ~ (agree | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '.json'] | path_join }}"
    mode: "0640"
  connection: local
  delegate_to: localhost
  become: false
  loop: "{{ dirsrv_repl_agmt_sched.results | default([]) }}"
  when: dirsrv_debug | bool

## Fractional/strip lists via CLI until module supports them
- name: Agreements | Apply fractional/strip lists
  ansible.builtin.command:
    argv:
      - dsconf
      - -D
      - "{{ dirsrv_dm_dn }}"
      - -w
      - "{{ dirsrv_password }}"
      - "{{ dirsrv_repl_conn_url }}"
      - repl-agmt
      - set
      - "{{ item.1.name }}"
      - --suffix
      - "{{ item.0.key }}"
      - "{{ '--frac-list' if dirsrv_repl_frac_list | length > 0 else omit }}"
      - "{{ dirsrv_repl_frac_list | join(',') if dirsrv_repl_frac_list | length > 0 else omit }}"
      - "{{ '--frac-list-total' if dirsrv_repl_frac_list_total | length > 0 else omit }}"
      - "{{ dirsrv_repl_frac_list_total | join(',') if dirsrv_repl_frac_list_total | length > 0 else omit }}"
      - "{{ '--strip-list' if dirsrv_repl_strip_list | length > 0 else omit }}"
      - "{{ dirsrv_repl_strip_list | join(',') if dirsrv_repl_strip_list | length > 0 else omit }}"
  register: dirsrv_repl_agmt_frac
  changed_when: >-
    dirsrv_repl_agmt_frac.rc == 0 and (
      'updated' in (dirsrv_repl_agmt_frac.stdout | lower | default('')) or
      'modified' in (dirsrv_repl_agmt_frac.stdout | lower | default(''))
    )
  failed_when: dirsrv_repl_agmt_frac.rc != 0
  no_log: "{{ not (dirsrv_debug | default(false) | bool) }}"
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname
    - (dirsrv_repl_frac_list | length > 0) or (dirsrv_repl_frac_list_total | length > 0) or (dirsrv_repl_strip_list | length > 0)
    - dirsrv_repl_apply_fractional | default(false) | bool
    - not ansible_check_mode

- name: Snapshot | Agreement fractional/strip set results (test-only)
  vars:
    res: "{{ item }}"
    suffix: "{{ item.item.0.key }}"
    agree: "{{ item.item.1.name }}"
    __snap_dir: "{{ [dirsrv_artifact_root_effective, inventory_hostname] | path_join }}"
    __raw_cmd: "{{ (res.cmd | default('')) | string }}"
    __san_cmd_1: "{{ __raw_cmd | regex_replace('(?i)(-w) +[^ ]+','-w ****') }}"
    __san_cmd: "{{ __san_cmd_1 | regex_replace('(?i)(--bind-passwd) +[^ ]+','--bind-passwd ****') }}"
    __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
    __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
  ansible.builtin.copy:
    content: |
      {{ {
          'host': inventory_hostname,
          'step': 'agreement-attrs-' ~ (agree | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')),
          'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
          'argv_redacted': __san_cmd,
          'rc': res.rc | default(-1),
          'stdout_excerpt': (res.stdout | default(''))[:2048],
          'stderr_excerpt': (res.stderr | default(''))[:2048],
          'duration_ms': __dur_ms
        } | to_nice_json }}
    dest: "{{ [__snap_dir, 'cmd-agreement-attrs-' ~ (agree | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '-' ~ (suffix | regex_replace('[^A-Za-z0-9_.-]','_')) ~ '.json'] | path_join }}"
    mode: "0640"
  connection: local
  delegate_to: localhost
  become: false
  loop: "{{ dirsrv_repl_agmt_frac.results | default([]) }}"
  when: dirsrv_debug | bool

  # Bind credential enforcement handled by module ensure step

### Online initialization using module
- name: Agreements | Initialize agreements marked init=true (online)
  vars:
    suffix: "{{ item.0.key }}"
    agree: "{{ item.1 }}"
  directories.ds.ds_repl_init:
    instance: "{{ dirsrv_repl_this_node.instance }}"
    suffix: "{{ suffix }}"
    agreement: "{{ agree.name }}"
    timeout: "{{ dirsrv_repl_retry_settings.operation_timeouts.init_status_poll | default(300) }}"
    poll_interval: "{{ dirsrv_repl_retry_settings.base_delay | default(1) }}"
  # throttle: 1  # Removed for parallel initialization performance
  with_subelements:
    - "{{ dirsrv_repl_agreements | dict2items }}"
    - value
  when:
    - item.1.from == inventory_hostname
    - dirsrv_repl_init_mode == 'online'
    - (item.1.init | default(false)) | bool
    - not ansible_check_mode
  # Polling is handled by ds_repl_init when wait=true; auxiliary retry/snapshot logic removed

- name: Agreements | Final health verification
  ansible.builtin.include_tasks: monitoring.yml
  when: not ansible_check_mode

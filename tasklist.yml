---
# High-level simplification backlog derived from docs/Complexity_Audit_Ansible_Podman_389DS.md
# Each task includes a precise goal, status, and an AI-oriented prompt
# Follow repo guidelines in README.md and the Repository Guidelines provided.

tasks:
  - id: T1-modules-only-repl
    title: Use collection modules exclusively for replication
    status: pending
    prompt: |
      Goal: Remove the dual implementation paths for replication and rely solely on the directories.ds modules.

      Scope:
      - Replace all CLI/fallback code paths with module calls in the replication role.
      - Remove the feature flag `dirsrv_repl_use_modules` and any conditional branching that falls back to `dsconf`/`ldap*` for agreements/init/wait.

      Files to change:
      - roles/dirsrv_repl/tasks/agreements.yml
      - roles/dirsrv_repl/tasks/init.yml
      - roles/dirsrv_repl/tasks/wait_green.yml
      - roles/dirsrv_repl/tasks/monitor.yml
      - roles/dirsrv_repl/tasks/monitoring.yml
      - roles/dirsrv_repl/defaults/main.yml

      Implementation details:
      - Use `directories.ds.ds_repl_agreement` with `state: present` for creating/updating agreements.
      - Use `directories.ds.ds_repl_init` to initialize agreements (no `--init` in create step).
      - Use `directories.ds.ds_repl_wait` for health waits instead of parsing CLI.
      - Strip out CLI-only snapshotting that is no longer applicable, leaving any existing debug snapshots gated behind `dirsrv_debug: true`.
      - Ensure `no_log: true` where passwords/credentials are used.

      Acceptance criteria:
      - `ansible-playbook --syntax-check site.yml` passes.
      - `rg -n "dsconf|ldapsearch|ldapwhoami" roles/dirsrv_repl` returns no hits in the modified tasks above (exceptions allowed in enable/tuning if still needed).
      - Running `ansible-playbook -i inventory.yml repl_mesh.yml --check` completes planning without errors on an existing lab.

  - id: T2-dns-preflight
    title: Replace /etc/hosts hacks with DNS preflight gating
    status: pending
    prompt: |
      Goal: Eliminate dynamic /etc/hosts edits and fail fast when DNS is misconfigured.

      Scope:
      - Remove the DNS resolution hack that appends to /etc/hosts from the replication role.
      - Add deterministic DNS and TCP connectivity checks to preflight and abort if unresolved.

      Files to change:
      - roles/dirsrv_repl/tasks/error_recovery.yml (remove the entire "Handle DNS resolution failures" block)
      - roles/dirsrv_common/tasks/preflight.yml (add DNS and port checks for all agreement targets)

      Implementation details:
      - In preflight, for each agreement target (from `dirsrv_repl_agreements`), run a `getent hosts <name>` and assert rc == 0.
      - Optionally use `ansible.builtin.wait_for` with `host` and `port` for quick TCP gating (short timeout, non-destructive).
      - Provide a concise fail_msg guiding the operator to fix Podman DNS/network.
      - Do not modify /etc/hosts under any circumstance.

      Acceptance criteria:
      - `rg -n "lineinfile:.*\/etc\/hosts" roles/dirsrv_repl/tasks/error_recovery.yml` returns no matches.
      - Broken DNS results in a clear assert failure during preflight, before any replication changes.

  - id: T3-remove-backend-create-from-repl
    title: Remove suffix/backend creation from replication role; assert existence instead
    status: pending
    prompt: |
      Goal: Replication role should not create or modify backends/suffix mapping trees.

      Scope:
      - Delete the task block in `roles/dirsrv_repl/tasks/enable.yml` that creates backends/mapping trees.
      - Replace with a lightweight, read-only assert that the suffix exists and replication can be enabled.

      Files to change:
      - roles/dirsrv_repl/tasks/enable.yml

      Implementation details:
      - Remove the "Enable | Ensure suffix mapping tree exists (safe)" task that runs `dsconf ... backend create`.
      - Add a read-only check: either `directories.ds.ds_repl_enable` in check_mode or a `dsconf -j replication get --suffix <DN>` gated by `changed_when: false` and `failed_when: false`, then assert on expected markers.
      - Provide actionable `fail_msg` telling the operator to ensure the suffix is created by migrate flows.

      Acceptance criteria:
      - Replication role no longer runs `backend create`.
      - Failing precondition produces a clear error without side effects.

  - id: T4-simplify-init-orchestration
    title: Simplify init ordering; remove primary-supplier state machine
    status: pending
    prompt: |
      Goal: Reduce orchestration complexity by removing implicit state for primary supplier and bidirectional init pairing.

      Scope:
      - Remove the blocks in `roles/dirsrv_repl/tasks/main.yml` that compute `dirsrv_repl_init_pairs` and the "Mesh | Identify primary supplier" logic.
      - Enforce serialized initialization using Ansible mechanisms instead of per-host state machines.

      Files to change:
      - roles/dirsrv_repl/tasks/main.yml
      - repl_mesh.yml (add `serial: 1` at the play level)

      Implementation details:
      - Delete the `set_fact` blocks that compute pairs and the `assert` that blocks bidirectional init.
      - Add `throttle: 1` to the tasks that perform `directories.ds.ds_repl_init` (and, if helpful, agreement creation) to avoid concurrency.
      - In `repl_mesh.yml`, set `serial: 1` to sequence hosts for init operations.
      - Keep any straightforward waits, but avoid deriving implicit primaries from facts.

      Acceptance criteria:
      - The main tasks no longer set/consume `dirsrv_repl_init_pairs` or `dirsrv_repl_primary_supplier`.
      - `repl_mesh.yml` includes `serial: 1` and a run converges without race conditions.

  - id: T5-slim-health-checks
    title: Slim replication health_checks.yml to essentials
    status: pending
    prompt: |
      Goal: Keep only high-signal checks in health_checks.yml and move environment checks to preflight.

      Scope:
      - Retain: variable validation, LDAPI readiness, minimal remote connectivity ping.
      - Remove or migrate: time sync warnings, extensive final verification, mesh topology counters.

      Files to change:
      - roles/dirsrv_repl/tasks/health_checks.yml
      - roles/dirsrv_common/tasks/preflight.yml (move time sync check here)

      Implementation details:
      - Cut back the remote connectivity loop; rely on preflight (T2) to gate DNS/TCP.
      - Keep a single LDAPI EXTERNAL base search as a readiness check.
      - Remove the heavy "Post-operation verification" block; rely on `wait_green.yml` and `ds_repl_wait` for convergence.

      Acceptance criteria:
      - health_checks.yml is under ~150 lines and contains no DST state machine logic.
      - Most environment assertions appear in preflight instead.

  - id: T6-repl-teardown
    title: Add replication teardown tasks and a playbook
    status: pending
    prompt: |
      Goal: Provide a clean rollback path that removes agreements and disables replication when needed.

      Scope:
      - New task file `roles/dirsrv_repl/tasks/teardown.yml` to remove agreements using `directories.ds.ds_repl_agreement: state=absent`.
      - New top-level playbook `replication_teardown.yml` that runs teardown across the inventory.

      Implementation details:
      - Iterate over `dirsrv_repl_agreements` and call `ds_repl_agreement: state=absent` for each local-from agreement.
      - Optionally add a final `dsconf replication set --suffix ... --replica-enabled off` per suffix if supported (best-effort, guarded by `changed_when: result.rc == 0`, `failed_when: false`).
      - Ensure idempotence and `no_log: true` where needed.

      Acceptance criteria:
      - `ansible-playbook --syntax-check replication_teardown.yml` passes.
      - Re-running teardown is idempotent (no changes on second run).

  - id: T7-defaults-cleanup
    title: Remove dirsrv_repl_use_modules and align defaults
    status: pending
    prompt: |
      Goal: Drop the feature flag now that modules are the only path and prune unused defaults.

      Files to change:
      - roles/dirsrv_repl/defaults/main.yml

      Implementation details:
      - Remove `dirsrv_repl_use_modules` and any comments instructing toggling paths.
      - Ensure remaining defaults still align with variables guidelines (lower_snake_case, `dirsrv_*` prefix).

      Acceptance criteria:
      - No references to `dirsrv_repl_use_modules` remain in repo.

  - id: T8-docs-refresh
    title: Refresh docs to reflect simplified replication flow
    status: pending
    prompt: |
      Goal: Update design and README docs to document the simplified, module-only flow and preflight gates.

      Files to change:
      - docs/REPLICATION_DESIGN.md
      - docs/REPLICATION_LAB.md
      - docs/MODULE_SPECS.md
      - README.md

      Implementation details:
      - Remove references to CLI fallbacks and /etc/hosts edits.
      - Document preflight DNS/TCP checks and failure modes.
      - Show example play invocations (`--check`, `--diff`, vault usage) per repository policy.

      Acceptance criteria:
      - Docs build cleanly (markdown lints pass if configured) and reflect current variables and flow.

  - id: T9-check-mode-audit
    title: Ensure check-mode safety and explicit changed_when/failed_when
    status: pending
    prompt: |
      Goal: Reconfirm that destructive operations are guarded in check-mode and commands have explicit result gating.

      Scope:
      - Audit `roles/dirsrv_repl/tasks/*.yml` and ensure tasks that change state are skipped under `ansible_check_mode`.
      - Verify all `command`/`shell` tasks use `changed_when` and `failed_when` appropriately.

      Files to review:
      - roles/dirsrv_repl/tasks/enable.yml
      - roles/dirsrv_repl/tasks/agreements.yml
      - roles/dirsrv_repl/tasks/init.yml
      - roles/dirsrv_repl/tasks/wait_green.yml
      - roles/dirsrv_repl/tasks/monitor.yml
      - roles/dirsrv_repl/tasks/monitoring.yml

      Acceptance criteria:
      - `ansible-playbook -i inventory.yml repl_mesh.yml --check` performs no changes and surfaces clear gating messages when preconditions fail.

  - id: T10-idempotence-and-ci
    title: Add idempotence check target and tighten lint/test flows
    status: pending
    prompt: |
      Goal: Provide a one-shot target to run lint, syntax-check, and double-run idempotence for the replication flows.

      Files to change:
      - Makefile
      - test/repl_mesh.yml (ensure it reflects current defaults)

      Implementation details:
      - Add a `test_repl_idempotent` make target that runs:
        1) `ansible-playbook --syntax-check repl_mesh.yml`
        2) `ansible-playbook -i inventory.yml repl_mesh.yml -e dirsrv_debug=false`
        3) Re-run step (2) and ensure no changes reported (grep summary).
      - Ensure `ansible-lint` and `yamllint .` targets exist or are optional if tools not installed.

      Acceptance criteria:
      - `make test_repl_idempotent` completes and second run shows 0 changed.

---
- name: Seed test data in containers (Podman only)
  hosts: dirsrv_source
  gather_facts: false
  vars:
    instance: "{{ dirsrv_instance | default(inventory_hostname) }}"
    ldapi_uri: "ldapi://%2Fdata%2Frun%2Fslapd-{{ instance }}.socket"
    example_ldif: "/root/example.ldif"
    suffix: "dc=example,dc=com"

  pre_tasks:
    - name: Guard | Ensure Podman connection is used
      ansible.builtin.assert:
        that:
          - ansible_connection is defined
          - ansible_connection == 'containers.podman.podman'
        fail_msg: "This seed play is for Podman test containers only."

  tasks:
    - name: Wait | ldapi readiness (with snapshot on failure)
      block:
        - name: Wait for ldapi to be ready
          ansible.builtin.command:
            argv:
              - ldapsearch
              - -Y
              - EXTERNAL
              - -H
              - "{{ ldapi_uri }}"
              - -s
              - base
              - -b
              - ''
              - '(objectClass=*)'
          register: ldapi_ready
          changed_when: false
          retries: 120
          delay: 1
          until: ldapi_ready.rc == 0
      rescue:
        - name: Snapshot | ldapi readiness attempt (test-only)
          vars:
            res: "{{ ldapi_ready }}"
            __snap_dir: "{{ [dirsrv_artifact_root_effective | default([playbook_dir, '.ansible', 'artifacts'] | path_join), inventory_hostname] | path_join }}"
            __raw_cmd: "{{ (res.cmd | default('')) | string }}"
            __san_cmd: "{{ __raw_cmd }}"
            __parts: "{{ (res.delta | default('0:0:0.0')) | regex_findall('([0-9]+)') }}"
            __dur_ms: "{{ (__parts[0] | default('0') | int) * 3600000 + (__parts[1] | default('0') | int) * 60000 + (__parts[2] | default('0') | int) * 1000 + ((__parts[3] | default('0') | int) // 1000) }}"
            __payload: |
              {{ {
                  'host': inventory_hostname,
                  'step': 'seed-ldapi-wait',
                  'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
                  'argv_redacted': __san_cmd,
                  'rc': res.rc | default(-1),
                  'stdout_excerpt': (res.stdout | default(''))[:2048],
                  'stderr_excerpt': (res.stderr | default(''))[:2048],
                  'duration_ms': __dur_ms
                } | to_nice_json }}
          when: (dirsrv_debug | default(false)) | bool
          block:
            - name: Ensure local artifacts dir exists (controller)
              ansible.builtin.file:
                path: "{{ __snap_dir }}"
                state: directory
                mode: "0750"
              connection: local
              delegate_to: localhost
              become: false
            - name: Write command snapshot (seed ldapi wait)
              ansible.builtin.copy:
                content: "{{ __payload }}"
                dest: "{{ [__snap_dir, 'cmd-seed-ldapi-wait.json'] | path_join }}"
                mode: "0640"
              connection: local
              delegate_to: localhost
              become: false

    - name: Ensure suffix mapping tree exists
      ansible.builtin.command:
        argv:
          - dsconf
          - "{{ instance }}"
          - backend
          - create
          - --suffix
          - "{{ suffix }}"
          - --be-name
          - userRoot
      register: _test_seed_suffix_create
      changed_when: _test_seed_suffix_create.rc == 0
      failed_when: >-
        _test_seed_suffix_create.rc != 0 and
        (
          'already exists' not in ((
            (_test_seed_suffix_create.stdout | lower | default('')) + ' ' +
            (_test_seed_suffix_create.stderr | lower | default(''))
          ))
          and
          'exists' not in ((
            (_test_seed_suffix_create.stdout | lower | default('')) + ' ' +
            (_test_seed_suffix_create.stderr | lower | default(''))
          ))
        )
    - name: Snapshot | dsconf ensure backend create (test-only)
      vars:
        res: "{{ _test_seed_suffix_create }}"
        __snap_dir: "{{ [dirsrv_artifact_root_effective | default([playbook_dir, '.ansible', 'artifacts'] | path_join), inventory_hostname] | path_join }}"
        __raw_cmd: "{{ (res.cmd | default('')) | string }}"
        __payload: |
          {{ {
              'host': inventory_hostname,
              'step': 'seed-backend-create',
              'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
              'argv_redacted': __raw_cmd,
              'rc': res.rc | default(-1),
              'stdout_excerpt': (res.stdout | default(''))[:2048],
              'stderr_excerpt': (res.stderr | default(''))[:2048]
            } | to_nice_json }}
      when: (dirsrv_debug | default(false)) | bool
      block:
        - name: Ensure local artifacts dir exists (controller)
          ansible.builtin.file:
            path: "{{ __snap_dir }}"
            state: directory
            mode: "0750"
          connection: local
          delegate_to: localhost
          become: false
        - name: Write command snapshot (seed backend create)
          ansible.builtin.copy:
            content: "{{ __payload }}"
            dest: "{{ [__snap_dir, 'cmd-seed-backend-create.json'] | path_join }}"
            mode: "0640"
          connection: local
          delegate_to: localhost
          become: false

    - name: Seed example LDIF (idempotent, retries)
      ansible.builtin.shell: |
        if [ -f "{{ example_ldif }}" ]; then
          ldapadd -Y EXTERNAL -H "{{ ldapi_uri }}" -f "{{ example_ldif }}"
        else
          exit 0
        fi
      register: seed
      changed_when: false
      failed_when: >-
        seed.rc != 0 and not (((seed.stderr | default('')) ~ (seed.stdout | default(''))) is search('Already exists'))
      retries: 20
      delay: 1
      until: >-
        seed.rc == 0 or (((seed.stderr | default('')) ~ (seed.stdout | default(''))) is search('Already exists'))
    - name: Snapshot | seed ldapadd command (test-only)
      vars:
        res: "{{ seed }}"
        __snap_dir: "{{ [dirsrv_artifact_root_effective | default([playbook_dir, '.ansible', 'artifacts'] | path_join), inventory_hostname] | path_join }}"
        __raw_cmd: "{{ (res.cmd | default('')) | string }}"
        __payload: |
          {{ {
              'host': inventory_hostname,
              'step': 'seed-ldapadd',
              'ts': (ansible_date_time.iso8601_micro | default("%Y-%m-%dT%H:%M:%SZ" | strftime)),
              'argv_redacted': __raw_cmd,
              'rc': res.rc | default(-1),
              'stdout_excerpt': (res.stdout | default(''))[:2048],
              'stderr_excerpt': (res.stderr | default(''))[:2048]
            } | to_nice_json }}
      when: (dirsrv_debug | default(false)) | bool
      block:
        - name: Ensure local artifacts dir exists (controller)
          ansible.builtin.file:
            path: "{{ __snap_dir }}"
            state: directory
            mode: "0750"
          connection: local
          delegate_to: localhost
          become: false
        - name: Write command snapshot (seed ldapadd)
          ansible.builtin.copy:
            content: "{{ __payload }}"
            dest: "{{ [__snap_dir, 'cmd-seed-ldapadd.json'] | path_join }}"
            mode: "0640"
          connection: local
          delegate_to: localhost
          become: false

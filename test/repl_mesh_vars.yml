---
# Mesh replication test: 2 suppliers (ds-s1, ds-s2) and 2 consumers (ds-c1, ds-c2)

dirsrv_password: "{{ vault_dirsrv_password | default('password') }}"
dirsrv_manage_service: false
dirsrv_instance: "localhost"
dirsrv_ldapi_socket_path: "/data/run/slapd-{{ dirsrv_instance }}.socket"
dirsrv_ldapi_uri: "ldapi://{{ dirsrv_ldapi_socket_path | regex_replace('/', '%2F') }}"

dirsrv_repl_suffixes:
  - "dc=example,dc=com"

dirsrv_repl_nodes:
  ds-s1: { role: supplier, instance: "localhost", host: "s1.dsnet.test", port: 3389, protocol: LDAP }
  ds-c1: { role: consumer, instance: "localhost", host: "c1.dsnet.test", port: 3389, protocol: LDAP }
  ds-s2: { role: supplier, instance: "localhost", host: "s2.dsnet.test", port: 3389, protocol: LDAP }
  ds-c2: { role: consumer, instance: "localhost", host: "c2.dsnet.test", port: 3389, protocol: LDAP }

dirsrv_repl_replica_ids:
  "dc=example,dc=com":
    ds-s1: 1
    ds-s2: 2

# Skip strict uniqueness assert in lab; the role's helper flattener
# expects normalized mapping and can be overzealous for simple lab data.
dirsrv_repl_require_unique_replica_ids: false

dirsrv_repl_auth:
  method: SIMPLE
  bind_dn: "cn=Directory Manager"
  bind_password: "{{ dirsrv_password }}"

dirsrv_repl_agreements:
  "dc=example,dc=com":
    # Supplier-to-supplier (bi-directional), init from ds-s1 to ds-s2
    - { from: "ds-s1", to: "ds-s2", name: "s1-to-s2", init: true }
    - { from: "ds-s2", to: "ds-s1", name: "s2-to-s1", init: false }
    # Supplier-to-consumer (hub-and-spoke topology)
    - { from: "ds-s1", to: "ds-c1", name: "s1-to-c1", init: true }
    - { from: "ds-s2", to: "ds-c2", name: "s2-to-c2", init: true }

dirsrv_repl_set_release_timeout: false
dirsrv_repl_run_replcheck: false

# Lab-only: avoid suffix-level referrals masking local state
dirsrv_repl_disable_referrals: true

# Enable post-enable verification in role (bind + config checks)
dirsrv_repl_verify_post_enable: true

# Tighter wait thresholds for fast lab runs
dirsrv_repl_wait_stale_seconds: 30
dirsrv_repl_wait_steady_ok_polls: 2
dirsrv_repl_wait_delay: 1
dirsrv_repl_wait_timeout: 120
dirsrv_repl_wait_require_finished: true
dirsrv_repl_wait_timeout_configured: 10
dirsrv_repl_wait_timeout_start: 15
dirsrv_repl_wait_timeout_done: 60

# Disable network validation for container environments (skips /etc/hosts check)
dirsrv_network_validate: false

# Configure for hub-and-spoke topology (not full mesh requiring bidirectional agreements)
dirsrv_repl_require_bidirectional: false

# Override retry settings for faster test execution
dirsrv_repl_retry_settings:
  max_retries: 10
  base_delay: 1
  max_delay: 30
  backoff_multiplier: 1.5
  jitter: false
  circuit_breaker_threshold: 5
  operation_timeouts:
    ldapi_health_check: 30
    remote_bind_check: 60
    agreement_creation: 30
    agreement_init: 120
    init_status_poll: 180
    final_verification: 60
  mesh_settings:
    supplier_steady_gate_delay: 5
    secondary_supplier_delay: 10
    agreement_serialization_delay: 2
    changelog_verification_delay: 5
